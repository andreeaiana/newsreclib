_target_: newsreclib.models.fair_rec.manner_cr_module.CRModule

# training strategy
loss: "sup_con_loss"
late_fusion: True
temperature: 0.1

# news encoder
dataset_attributes: ${data.dataset_attributes}
attributes2encode: ["title", "abstract", "title_entities", "abstract_entities"]

# text encoder
plm_model: null
frozen_layers: null
text_embed_dim: 768
num_heads: 10
query_dim: 200
dropout_probability: 0.2
use_entities: True
pretrained_entity_embeddings_path: null
entity_embed_dim: 100

# outputs
outputs:
  train: ["preds", "targets", "cand_news_size"]
  val: ["preds", "targets", "cand_news_size"]
  test:
    [
      "preds",
      "targets",
      "cand_news_size",
      "hist_news_size",
      "target_categories",
      "target_sentiments",
      "hist_categories",
      "hist_sentiments",
      "user_ids",
      "cand_news_ids",
    ]

# evaluation
top_k_list: [5, 10]
num_categ_classes: 18
num_sent_classes: 3
save_recs: False
recs_fpath: "${paths.output_dir}/recommendations.json"

optimizer:
  _target_: torch.optim.Adam
  _partial_: true
  lr: 0.00001

scheduler: null
